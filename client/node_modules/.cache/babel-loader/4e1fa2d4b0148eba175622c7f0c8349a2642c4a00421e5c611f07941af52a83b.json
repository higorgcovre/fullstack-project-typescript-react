{"ast":null,"code":"// src/store/authStore.ts\nimport create from 'zustand';\nexport const useAuthStore = create(set => ({\n  isAuthenticated: false,\n  userId: null,\n  email: null,\n  setAuthenticated: auth => set({\n    isAuthenticated: auth\n  }),\n  setUserId: id => set({\n    userId: id\n  }),\n  setEmail: email => set({\n    email\n  })\n}));","map":{"version":3,"names":["create","useAuthStore","set","isAuthenticated","userId","email","setAuthenticated","auth","setUserId","id","setEmail"],"sources":["C:/Users/HÃ­gor Covre/Desktop/Projetos/meu-projeto/client/src/store/authStore.ts"],"sourcesContent":["// src/store/authStore.ts\r\nimport create from 'zustand';\r\n\r\ninterface AuthState {\r\n  isAuthenticated: boolean;\r\n  userId: string | null; // Para usar com ID\r\n  email: string | null; // Para usar com email\r\n  setAuthenticated: (auth: boolean) => void;\r\n  setUserId: (id: string | null) => void;\r\n  setEmail: (email: string | null) => void;\r\n}\r\n\r\nexport const useAuthStore = create<AuthState>((set) => ({\r\n  isAuthenticated: false,\r\n  userId: null,\r\n  email: null,\r\n  setAuthenticated: (auth) => set({ isAuthenticated: auth }),\r\n  setUserId: (id) => set({ userId: id }),\r\n  setEmail: (email) => set({ email }),\r\n}));\r\n"],"mappings":"AAAA;AACA,OAAOA,MAAM,MAAM,SAAS;AAW5B,OAAO,MAAMC,YAAY,GAAGD,MAAM,CAAaE,GAAG,KAAM;EACtDC,eAAe,EAAE,KAAK;EACtBC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAI;EACXC,gBAAgB,EAAGC,IAAI,IAAKL,GAAG,CAAC;IAAEC,eAAe,EAAEI;EAAK,CAAC,CAAC;EAC1DC,SAAS,EAAGC,EAAE,IAAKP,GAAG,CAAC;IAAEE,MAAM,EAAEK;EAAG,CAAC,CAAC;EACtCC,QAAQ,EAAGL,KAAK,IAAKH,GAAG,CAAC;IAAEG;EAAM,CAAC;AACpC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}