{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H\\xEDgor Covre\\\\Desktop\\\\Projetos\\\\meu-projeto\\\\client\\\\src\\\\components\\\\ProfileModal.tsx\",\n  _s = $RefreshSig$();\n// src/components/ProfileModal.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { useAuthStore } from '../store/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileModal = ({\n  onClose\n}) => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const email = useAuthStore(state => state.email); // Acesso ao email do estado global\n  const userId = useAuthStore(state => state.userId);\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      if (email) {\n        try {\n          const response = await fetch(`http://localhost:5002/api/users/email?email=${email}`);\n          const data = await response.json();\n          setUserInfo(data);\n        } catch (error) {\n          console.error('Erro ao buscar informações do usuário', error);\n        }\n      } else {\n        console.error('Email é nulo ou indefinido');\n      }\n    };\n    fetchUserInfo();\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileModal, \"PQkbamL6PIB8iYwnxsNOzzrN9Bc=\", false, function () {\n  return [useAuthStore, useAuthStore];\n});\n_c = ProfileModal;\nexport default ProfileModal;\nvar _c;\n$RefreshReg$(_c, \"ProfileModal\");","map":{"version":3,"names":["React","useEffect","useState","useAuthStore","jsxDEV","_jsxDEV","ProfileModal","onClose","_s","userInfo","setUserInfo","email","state","userId","fetchUserInfo","response","fetch","data","json","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hígor Covre/Desktop/Projetos/meu-projeto/client/src/components/ProfileModal.tsx"],"sourcesContent":["// src/components/ProfileModal.tsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAuthStore } from '../store/authStore';\r\n\r\nconst ProfileModal: React.FC<{ onClose: () => void }> = ({ onClose }) => {\r\n  const [userInfo, setUserInfo] = useState<{ name: string; email: string } | null>(null);\r\n  const email = useAuthStore((state) => state.email);  // Acesso ao email do estado global\r\n  const userId = useAuthStore((state) => state.userId);\r\n\r\n  useEffect(() => {\r\n    const fetchUserInfo = async () => {\r\n      if (email) {\r\n        try {\r\n          const response = await fetch(`http://localhost:5002/api/users/email?email=${email}`);\r\n          const data = await response.json();\r\n          setUserInfo(data);\r\n        } catch (error) {\r\n          console.error('Erro ao buscar informações do usuário', error);\r\n        }\r\n      } else {\r\n        console.error('Email é nulo ou indefinido');\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, [email]);\r\n\r\n  return (\r\n    <div>\r\n      {/* Seu código para renderizar o modal */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAyC,IAAI,CAAC;EACtF,MAAMS,KAAK,GAAGR,YAAY,CAAES,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC,CAAC,CAAE;EACrD,MAAME,MAAM,GAAGV,YAAY,CAAES,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EAEpDZ,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAIH,KAAK,EAAE;QACT,IAAI;UACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+CL,KAAK,EAAE,CAAC;UACpF,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCR,WAAW,CAACO,IAAI,CAAC;QACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;QAC/D;MACF,CAAC,MAAM;QACLC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC7C;IACF,CAAC;IAEDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEN,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BIF,YAA+C;EAAA,QAErCH,YAAY,EACXA,YAAY;AAAA;AAAAsB,EAAA,GAHvBnB,YAA+C;AA8BrD,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}